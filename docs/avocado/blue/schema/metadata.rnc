start = root_element

root_element = element burritoMetadata {
    attribute id  { id_string },
    attribute revision { revision_string },
    attribute version { xsd:string { pattern = "0.1(\..+)?" } },
    id_server_element+,
    type_element,
    (
        identification_element
    )
}

id_server_element = element idServer {
    attribute prefix {id_prefix_string},
    attribute local { xsd:boolean }?,
    xsd:anyURI
}

type_element = scripture_type_element

scripture_type_element = scripture_text_type_element | scripture_x_type_element

scripture_text_type_element = element type {
    element flavor { "scriptureText" } &
    element flavorType { "scripture" } &
    element hasCharacters { "true" } &
    element hasSource { xsd:boolean } &
    element isPublishable { xsd:boolean } &
    confidentiality_element &
    scripture_text_details_element?
}

confidentiality_element = element confidentiality {
    element metadata { confidentiality_enum } &
    element source { confidentiality_enum } &
    element publications { confidentiality_enum }
}

scripture_text_details_element = element details {
    element projectType { scripture_text_project_type_enum } &
    conventions_element?
}

identification_element = element identification {
    element name {
        name_like_content
    }+ &
    element description {
        name_like_content
    }* &
    element abbreviation {
        attribute lang {bcp47_string},
        abbreviation_string
    }* &
    element dateCompleted {
        loose_date
    }? &
    system_id*
}

system_id = known_system_id | x_system_id

known_system_id = (gbc_system_id | reap_system_id | biblica_system_id | tms_system_id | ptreg_system_id | dbp_system_id | pt_system_id)

gbc_system_id =
  element systemId {
    attribute type { "gbc" },
    gbc_elements
  }

gbc_elements =
  element id {
    gbc_id_string
  }

ptreg_system_id =
  element systemId {
    attribute type { "ptreg" },
    ptreg_elements
 }

tms_system_id =
  element systemId {
    attribute type { "tms" },
    tms_elements
  }

tms_elements =
  element id {
    tms_id_string
  }

pt_system_id =
  element systemId {
    attribute type { "paratext" },
    pt_elements
  }

pt_elements =
  element name { trimmed_text } &
  element fullName { trimmed_text } &
  element csetId { trimmed_text }? &
  element id { pt_id_string } &
  (
    element baseId { pt_id_string } &
    element baseName { trimmed_text }
  )?

ptreg_elements =
  element id { ptreg_id_string }

reap_system_id =
  element systemId {
    attribute type { "reap" },
    reap_elements
  }

reap_elements =
  element id { reap_id_string }

biblica_system_id =
  element systemId {
    attribute type { "biblica" },
    biblica_elements
  }

biblica_elements =
  element id { biblica_id_string }

dbp_system_id =
  element systemId {
    attribute type { "dbp" },
    dbp_elements
  }

dbp_elements =
  element id { dbp_id_string }
  
x_system_id =
  element systemId {
    attribute type { x_thingey },
    anything
  }

loose_date = xsd:date | xsd:gYear | xsd:gYearMonth | xsd:dateTime

name_like_content = (
    attribute lang {bcp47_string},
    trimmed_text
)

# Strings and Enums

biblica_id_string = xsd:string { pattern = "[0-9]{0,5}" }

gbc_id_string = xsd:string { pattern = "[0-9a-f]{24}" }

tms_id_string = xsd:string { pattern = "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}" }

pt_id_string = xsd:string { pattern = "[0-9a-f]{40}" }

ptreg_id_string = xsd:string { pattern = "[0-9a-zA-Z]{17}" }

reap_id_string = xsd:anyURI

dbp_id_string = xsd:string { pattern = "[A-Z0-9]{10}" }

x_system_id_string = x_thingey

bcp47_string = xsd:string { pattern = "[A-Za-z]{2,3}([\-_][A-Za-z0-9]+){0,4}" }
trimmed_text = xsd:string { pattern = "\S(.+\S)?" }

scripture_text_project_type_enum = (
    "standard" |
    "daughter" |
    "studyBible" |
    "studyBibleAdditions" |
    "backTranslation" |
    "auxiliary" |
    "transliterationManual"|
    "transliterationWithEncoder"
)

x_scripture_text_project_string = x_thingey

conventions_element = element conventions { convention_element+ }

convention_element = element convention {
    attribute version { version_string },
    ( convention_enum | x_convention_string )
}

scripture_x_type_element = element type {
    element flavor { x_thingey } &
    element flavorType { "scripture" } &
    element hasCharacters { xsd:boolean } &
    element hasSource { xsd:boolean } &
    element isPublishable { xsd:boolean } &
    confidentiality_element &
    x_details_element?
}

x_details_element = element details {
    anything*
}

anything = element * { attribute * {text}* & anything* & text}

id_prefix_string = xsd:string {pattern = "(x-)?[a-z][A-Za-z0-9]+"}

id_string = xsd:string {
    pattern = "(x-)?[a-z][A-Za-z0-9]+::[0-9A-Za-z]([0-9A-Za-z_\-]{0,62}[0-9A-Za-z])?"
}

revision_string = xsd:string {
    pattern = "[0-9A-Za-z]([0-9A-Za-z_\-]{0,62}[0-9A-Za-z])?"
}

flavor_enum = "scriptureText"

x_flavor_string = x_thingey

flavor_type_enum = "scripture" | "gloss" | "paraScriptural"

version_string = xsd:string { pattern = "\d+.\d+(\..+)?" }

convention_enum = "usxRefs" | "usxDirs"

x_convention_string = x_thingey

x_thingey = xsd:string { pattern = "x-[a-z][A-za-z0-9]+" }

confidentiality_enum = "unrestricted" | "restricted" | "confidential"

abbreviation_string = xsd:string { pattern = "\w+" }
